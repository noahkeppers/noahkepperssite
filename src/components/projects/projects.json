[
    {
        "id": "te",
        "title": "Theatre Engine",
        "subtitle": "Michigan State • 2015 - 2018",
        "desc": "Lights, sound, servers.",
        "splashCaption": "Photos courtesy of Alison Dobbins",
        "splashAlt": "Dancers in colored t-shirts and black pants moving underneath bright spotlights",
        "buttons": [
            {
                "text": "Project Website",
                "link": "https://www.msu.edu/~dobbinsa"
            }
        ],
        "body": [
          {
            "type": "text",
            "title": "Project Description",
            "text": "Theatre Engine blends lights, sound, and technology to let audiences become active participants in the performance. The show progresses through a variety of activities, from Call and Response (top left), in which dancers mimic audience members’ movements, to Poses (top right), in which audience members are invited onstage to dance." 
          },
          { 
            "type": "text",
            "title": "My Role",
            "text": "As a research assistant, I helped add features and fix bugs in the show’s software. I also designed and implemented software for a new segment of the show called Puzzle." 
          },
          {
            "type": "images",
            "images": [
              {
                "name": "callandresponse.png",
                "alt": "Dancers moving as audience members direct them with Android tablets. Underneath, a screenshot of a tablet that reads 'Your Turn (move your tablet)'",
                "caption": "The 'Call and Response' Activity"
              },
              {
                "name": "poses.png",
                "alt": "Audience members pull a dancer out of imaginary quicksand. Underneath, a screenshot tablet that reads'Quicksand'.",
                "caption": "The 'Poses' Activity"
              }
            ]
          },
          {
            "type": "text",
            "title": "Theatre Engine: Puzzle",
            "text": "Puzzle builds on previous show segments by requiring the audience to work collaboratively. Groups are divded by color, after which they can be sent text or image prompts. In a typical Puzzle segment, the audience is divded into groups by matching their tablet color with a spotlight on the floor. Once in groups, audience members work together to piece together an image and create a dance based on what it depicts."
          },
          {
              "type": "images",
              "images": [
                {
                  "name": "puzzle.png",
                  "alt": "Screenshots from Theatre Engine: Puzzle - from left to right, tablets display: 'Find your group' text, a photo of a pirate ship, and 'Dance this image' text",
                  "caption": "Theatre Engine: Puzzle Screenshots"
                }]
          },
          {
            "type": "images",
            "images": [
              {
                "name": "diagram.png",
                "link": "diagram.pdf",
                "alt": "Theatre Engine: Puzzle architecture diagram (click for PDF)",
                "caption": "Theatre Engine: Puzzle architecture diagram"
              }
            ]
          }
        ]
    },
    {
      "id": "dc",
      "title": "Dancing Computer",
      "subtitle": "Michigan State • Summer 2016",
      "desc": "Be the compiler, dance the code.",
      "splashCaption": "Photos courtesy of Alison Dobbins",
      "splashAlt": "A small child dances on a brightly colored floor as Matt looks on from behind a table full of computers and equipment",
      "buttons": [
          {
              "text": "Project Website",
              "link": "https://www.cse.msu.edu/dance"
          },
          {
            "text": "Research Poster",
            "link": "/static/dc-poster.pdf"
          },
          {
            "text": "Research Paper",
            "link": "https://www.emeraldinsight.com/doi/full/10.1108/IJPCC-02-2017-0012"
          }
      ],
      "body": [
        {
          "type": "text",
          "title": "Project Description",
          "text": "Dancing Computer explores a reading-first approach to coding using STEAM (STEM & Art). Students embody computers as they “execute” dances step-by-step on a gridded floor." 
        },
        { 
          "type": "text",
          "title": "My Role",
          "text": "During the summer, I worked with professors and students to teach Dancing Computer sessions and implement features. In August, I helped present our findings and contribute toward a research paper." 
        },
        {
          "type": "images",
          "images": [
            {
              "name": "dc1.png",
              "alt": "Two students stand facing each other on a brightly colored floor, reading instructions from tablets in their hands. Underneath, a screenshot of a tablet displays a puzzle piece with 'crouch forward 2' conveyed in pictographs.",
              "caption": "Students participate in the Dancing Computer activity in groups"
            },
            {
              "name": "dc2.png",
              "alt": "Two groups of students stand on a brightly colored floor, reaching toward the sky with tablets in their hands. Underneath, a screenshot of a tablet displays a puzzle piece with 'grow counter-clockwise 90' in pictographs.",
              "caption": "Dances range from small (4 students) to larger groups (8 students, shown here)"
            }
          ]
        },
        {
          "type": "text",
          "title": "Dancing Computer Sessions: Teaching Programming Concepts",
          "text": "During each session, I worked with other research assistants to teach students dance steps and programming concepts. After this pre-teaching segment, we facilitated dances in small groups, sending steps and monitoring progress using the server software. My programming work focused on teaching variables. Pre-teaching describes variables as “boxes” for storing numbers. Then, variable reference and assignment are introduced. Assignment requires entering the new value and provides feedback."
        },
        {
          "type": "images",
          "images": [
            {
              "name": "variables.png",
              "alt": "Screenshots showing the variables feature - from left to right, tablets display: 'Move forward X, X: 3', 'X = X - 2, X: 3' with a space underneath to enter a value of X, 'X = X - 2, X: 3' (as before) with examples of incorrect input (X = 4, colored red) and correct input (X = 1, colored green)",
              "caption": "Use of variables in dance 'steps'"
            }
          ]
        },
        {
            "type": "images",
            "images": [
              {
                "name": "dcserver.png",
                "alt": "Screenshot from the Dancing Computer server - the window displays a list of dance steps and a small window denoting each dancer's position on the colored floor",
                "caption": "Dancing Computer's server software"
              }]
        }
      ]
  },
  {
    "id": "capstone",
    "title": "Capstone Experience",
    "subtitle": "Michigan State • Fall 2018",
    "desc": "Everyone's got an opinion.",
    "splashCaption": "Photos courtesy of Dr. Wayne Dyksen",
    "splashAlt": "Noah presents a demo of the Customer App Review Dashboard during Team Ford's Alpha presentation",
    "buttons": [
        {
            "text": "Project Website",
            "link": "http://www.capstone.cse.msu.edu/2018-08/projects/ford/"
        },
        {
          "text": "GitHub Repository",
          "link": "https://github.com/morga206/CapstoneTeamFord"
        }
    ],
    "body": [
      {
        "type": "text",
        "title": "Project Description",
        "text": "For our capstone project, my team worked with Ford Motor Company to design a dashboard to analyze reviews for Ford’s mobile apps via Natural Language Processing." 
      },
      { 
        "type": "text",
        "title": "My Role",
        "text": "As the team member with the most industry experience, my role settled between project manager and engineering manager. In addition to coding, I served as the primary point of contact with Ford and facilitated team meetings to assign tasks and set timelines." 
      },
      {
        "type": "images",
        "images": [
          {
            "name": "projectplan.jpeg",
            "alt": "Mingkai presents a mockup of the Customer App Review Dashboard during Team Ford's Project Plan presentation",
            "caption": "Team Ford's Project Plan Presentation (UI Mockups)"
          },
          {
            "name": "teamphoto.jpeg",
            "alt": "Team Ford seated around a table",
            "caption": "Team Ford group photo"
          }
        ]
      },
      {
        "type": "text",
        "title": "The Ford Customer App Review Dashboard",
        "text": "The Ford Customer App Review Dashboard consists of two primary interfaces. Our web dashboard (pictured) allows Ford associates to query for review statistics on-demand. Additionally, our Slack bot sends periodic review reports to the Slack messaging service. Our system scrapes app reviews from app stores and analyzes them using Amazon Comprehend. The Spring Cloud Function-based backend then calculates aggregate statistics, which are sent to both an Angular web dashboard and Slack bot."
      },
      {
          "type": "images",
          "images": [
            {
              "name": "screenshot.png",
              "alt": "Screenshot of the Customer App Review Dashboard - three cards are displayed, each showing a statistic about an app's reviews: Overall Sentiment (displayed as a pie chart), Top Keywords (displayed as a list), and Sentiment Over Time (displayed as a line chart)",
              "caption": "The Customer App Review Dashboard's web interface"
            },
            {
              "name": "architecture.png",
              "link": "architecture.pdf",
              "alt": "System architecture diagram (click for PDF)",
              "caption": "System architecture overview"
            }
          ]
      }
    ]
  }
]